services:
  log-service:
    build: ./log-service
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: "${KAFKA_BROKERS}"
      KAFKA_TOPIC: "${KAFKA_TOPIC}"
      SPRING_DATASOURCE_URL: "${DB_URL}"
      SPRING_DATASOURCE_USERNAME: "${POSTGRES_USER}"
      SPRING_DATASOURCE_PASSWORD: "${POSTGRES_PASSWORD}"
      SPRING_JPA_HIBERNATE_DDL_AUTO: "${SPRING_JPA_DDL}"
    depends_on: [kafka, postgres]
    ports: ["${LOG_SERVICE_PORT}:8080"]

  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: "${POSTGRES_DB}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
    ports: ["${POSTGRES_PORT}:5432"]
    volumes: [pgdata:/var/lib/postgresql/data]

  zookeeper:
    image: bitnami/zookeeper:3.9
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
    ports:
      - "${ZOOKEEPER_PORT}:2181"

  kafka:
    image: bitnami/kafka:3.7
    environment:
      KAFKA_ENABLE_KRAFT: "no"
      KAFKA_CFG_ZOOKEEPER_CONNECT: "zookeeper:${ZOOKEEPER_PORT}"
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_CFG_LISTENERS: "PLAINTEXT://:${KAFKA_PORT}"
      KAFKA_CFG_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:${KAFKA_PORT}"
    depends_on:
      - zookeeper
    ports:
      - "${KAFKA_PORT}:${KAFKA_PORT}"

  mongo:
    image: mongo:7
    profiles: ["mongo"]
    ports: ["27017:27017"]
    volumes: [mongodata:/data/db]

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.14.0
    profiles: [ "elastic" ]
    environment:
      discovery.type: "single-node"
      xpack.security.enabled: "false"
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
    ports:
      - "${ELASTIC_PORT}:9200"
    volumes:
      - esdata:/usr/share/elasticsearch/data

  kibana:
    image: docker.elastic.co/kibana/kibana:8.14.0
    profiles: [ "elastic" ]
    environment:
      ELASTICSEARCH_HOSTS: "http://elasticsearch:${ELASTIC_PORT}"
    depends_on:
      - elasticsearch
    ports:
      - "${KIBANA_PORT}:5601"


  prometheus:
    image: prom/prometheus:v2.54.1
    profiles: ["metrics"]
    command: ["--config.file=/etc/prometheus/prometheus.yml"]
    volumes: ["./ops/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro"]
    ports: ["${PROMETHEUS_PORT}:9090"]

  grafana:
    image: grafana/grafana:11.1.0
    profiles: ["metrics"]
    ports: ["${GRAFANA_PORT}:3000"]
    depends_on: [prometheus]

  ml-service:
    build: ./ml-service
    ports: ["${ML_SERVICE_PORT}:8000"]

  rca-service:
    build: ./rca-service
    environment:
      ML_SERVICE_URL: "${ML_SERVICE_URL}"
      SPRING_DATASOURCE_URL: "${DB_URL}"
      SPRING_DATASOURCE_USERNAME: "${POSTGRES_USER}"
      SPRING_DATASOURCE_PASSWORD: "${POSTGRES_PASSWORD}"
      SPRING_JPA_HIBERNATE_DDL_AUTO: "${SPRING_JPA_DDL}"
      SPRING_KAFKA_BOOTSTRAP_SERVERS: "${KAFKA_BROKERS}"
    depends_on: [ml-service, postgres, kafka]
    ports: ["${RCA_SERVICE_PORT}:8080"]

  suggestion-service:
    build: ./suggestion-service
    environment:
      SPRING_DATASOURCE_URL: "${DB_URL}"
      SPRING_DATASOURCE_USERNAME: "${POSTGRES_USER}"
      SPRING_DATASOURCE_PASSWORD: "${POSTGRES_PASSWORD}"
      SPRING_JPA_HIBERNATE_DDL_AUTO: "${SPRING_JPA_DDL}"
    depends_on: [postgres]
    ports: ["${SUGGESTION_SERVICE_PORT}:8080"]

  frontend:
    build: ./frontend
    environment:
      VITE_RCA_API: "${VITE_RCA_API}"
    ports: ["${FRONTEND_PORT}:5173"]

volumes:
  pgdata:
  mongodata:
  esdata:
